# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_linux:
    name: Build for Linux for x86, x64, ARM, ARM64 and PPC64LE
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: build-linux.sh

  build_nintendo_switch:
    name: Build for Nintendo Switch
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: build-switch.sh

  build_macos:
    name: Build for macOS for Intel and Apple Silicon
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        mkdir -p mports
        cd mports
        git clone https://github.com/macports/macports-base.git
        cd macports-base
        ./configure --enable-readline
        make
        sudo make install
        make distclean
        sudo /opt/local/bin/port selfupdate
        sudo /opt/local/bin/port install libsdl2 libsdl2_image +universal

    - name: Build
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make

  build_windows:
    name: Build for Windows for x86 and x64
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" -A Win32 ..
        cmake --build . --config Release
        cmake -G "Visual Studio 16 2019" -A x64 ..
        cmake --build . --config Release
